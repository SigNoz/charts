# tests/signoz_env_test.yaml

suite: Test SigNoz Environment Variables

# We are testing the output of the StatefulSet template,
# where the environment variables are defined.
templates:
  - templates/signoz/statefulset.yaml

tests:
  # --- Test Case 1: SMTP is explicitly disabled ---
  - it: should not render SMTP-specific variables when emailing is disabled
    set:
      # Set values to disable the SMTP feature
      signoz:
        env:
          signoz_emailing_enabled: false
    asserts:
      # Assert that SMTP host variable is not present in the environment list.
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: SIGNOZ_EMAILING_SMTP_HOST

  # --- Test Case 2: SMTP enabled with the new 'env' convention ---
  - it: should render SMTP variables correctly using the new 'env' convention
    set:
      signoz:
        env:
          signoz_emailing_enabled: true
          signoz_emailing_smtp_address: 
            valueFrom: 
              secretKeyRef:
                name: my-smtp-secret
                key: smtp-address
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SIGNOZ_EMAILING_ENABLED
            value: "true"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SIGNOZ_EMAILING_SMTP_ADDRESS
            valueFrom:
              secretKeyRef:
                key: smtp-address
                name: my-smtp-secret

  # --- Test Case 3: SMTP enabled with the deprecated 'smtpVars' convention (Backward Compatibility) ---
  - it: should render SMTP variables correctly using the deprecated 'smtpVars' convention
    set:
      signoz:
        smtpVars:
          enabled: true
          existingSecret:
            name: my-smtp-secret
            hostKey: "smtp-host"
            portKey: "smtp-port"
            usernameKey: "smtp-user"
    asserts:
      # It should enable the master switch
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SIGNOZ_EMAILING_ENABLED
            value: "true"
      # It should pull variables from the specified secret
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SIGNOZ_EMAILING_SMTP_HOST
            valueFrom:
              secretKeyRef:
                key: smtp-host
                name: my-smtp-secret
      # It should construct the address from the host and port
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SIGNOZ_EMAILING_SMTP_ADDRESS
            value: "$(SIGNOZ_EMAILING_SMTP_HOST):$(SIGNOZ_EMAILING_SMTP_PORT)"

  # --- Test Case 4: Test precedence for the 'enabled' flag ---
  - it: should prioritize 'smtpVars.enabled' over 'env.signoz_emailing_enabled'
    set:
      signoz:
        # This value from the new convention should be IGNORED.
        env:
          signoz_emailing_enabled: "true"
        # This value from the old convention should WIN.
        smtpVars:
          enabled: false
    asserts:
      # Assert that the final rendered value is "false", proving that 'smtpVars.enabled'
      # took precedence over the value from the 'env' block.
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SIGNOZ_EMAILING_ENABLED
            value: "false"

  # --- Test Case 5: Test precedence for the SMTP address value ---
  - it: should prioritize the address from 'smtpVars' over 'env.signoz_emailing_smtp_address'
    set:
      signoz:
        # Define the SMTP address using the old 'smtpVars' convention
        smtpVars:
          enabled: true
          existingSecret:
            name: my-smtp-secret
            hostKey: "smtp-host"
            portKey: "smtp-port"
        # ALSO define the address using the new 'env' convention
        env:
          signoz_emailing_enabled: true
          signoz_emailing_smtp_address: 
            valueFrom: 
              secretKeyRef:
                name: my-smtp-secret
                key: a-different-address # This value should be IGNORED
    asserts:
      # Assert that the address is constructed from 'smtpVars' (host:port),
      # proving that the old convention for the address takes priority.
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SIGNOZ_EMAILING_SMTP_ADDRESS
            value: "$(SIGNOZ_EMAILING_SMTP_HOST):$(SIGNOZ_EMAILING_SMTP_PORT)"
      # As a sanity check, ensure the new convention's address is NOT rendered.
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: SIGNOZ_EMAILING_SMTP_ADDRESS
            valueFrom:
              secretKeyRef:
                key: a-different-address
                name: my-smtp-secret